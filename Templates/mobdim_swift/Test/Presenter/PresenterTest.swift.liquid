{% include 'header' %}

import Foundation

import Quick
import Nimble
@testable import {{ module_info.project_name }}

fileprivate class MockRoot: {{ prefix }}{{ module_info.name }}HeaderOutput {
    
}

fileprivate class MockViewController: {{ prefix }}{{ module_info.name }}ViewControllerInput {
    
}

fileprivate class MockInteractor: {{ prefix }}{{ module_info.name }}InteractorInput {
    
}


class {{ prefix }}{{ module_info.name }}PresenterSpec: QuickSpec {
    override func spec() {
        var sut: {{ prefix }}{{ module_info.name }}Presenter?
        var root: MockRoot?
        var controller: MockViewController?
        var interactor: MockInteractor?
        
        beforeEach {
            root = MockRoot()
            expect(root).toNot(beNil())
            sut = {{ prefix }}{{ module_info.name }}Presenter(root: root!)
            expect(sut).toNot(beNil())
            controller = MockViewController()
            expect(controller).toNot(beNil())
            interactor = MockInteractor()
            expect(interactor).toNot(beNil())
            sut!.__set_missing(controller: controller!, interactor: interactor!)
        }
    }
}
